name: Release Slides

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  SLIDE_FILE: slides.md
  STYLE_FILE: style.css
  OUTPUT_DIR: out
  TITLE: "FCSC Team Introduction"
  AUTHOR: "eR@sers"

jobs:
  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli

      - name : Create output directory
        run: mkdir -p ${{ env.OUTPUT_DIR }}

      - name: Compile slides to HTML
        run: marp --html --allow-local-files --theme ${{ env.STYLE_FILE }} --title "${{ env.TITLE }}" --author "${{ env.AUTHOR }}" ${{ env.SLIDE_FILE }} -o ${{ env.OUTPUT_DIR }}/html/slides.html
      
      - name: Copy HTML assets
        run: cp -r images ${{ env.OUTPUT_DIR }}/html/images

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/html
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Compress HTML output (`html/` to `slides.html.zip`)
        run: zip -r ${{ env.OUTPUT_DIR }}/slides.html.zip ${{ env.OUTPUT_DIR }}/html && rm -r ${{ env.OUTPUT_DIR }}/html

      - name: Compile slides to PDF
        run: marp --pdf --allow-local-files --theme ${{ env.STYLE_FILE }} --title "${{ env.TITLE }}" --author "${{ env.AUTHOR }}" ${{ env.SLIDE_FILE }} -o ${{ env.OUTPUT_DIR }}/slides.pdf

      - name: Release slides
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.OUTPUT_DIR }}/*